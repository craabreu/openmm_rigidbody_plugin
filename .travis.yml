language: cpp

compiler:
  - gcc

sudo: required

dist: trusty

env:
  global:
    - CUDA_VERSION="7.5-18"

addons:
    apt:
        packages:
        - cmake
        - lcov

before_install:
# CUDA Installation:
  - wget "http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_${CUDA_VERSION}_amd64.deb"
  - sudo dpkg -i cuda-repo-ubuntu1404_${CUDA_VERSION}_amd64.deb
  - sudo apt-get update -qq
  - export CUDA_APT=${CUDA_VERSION%-*}
  - export CUDA_APT=${CUDA_APT/./-}
  - sudo apt-get install -y cuda-drivers cuda-core-${CUDA_APT} cuda-cudart-dev-${CUDA_APT} cuda-cufft-dev-${CUDA_APT}
  - sudo apt-get clean
  - export CUDA_HOME=/usr/local/cuda-${CUDA_VERSION%%-*}
  - export LD_LIBRARY_PATH=${CUDA_HOME}/lib64/stubs:${LD_LIBRARY_PATH}
  - export PATH=${CUDA_HOME}/bin:${PATH}
  - sudo apt-get install -y libgl1-mesa-dev
# OpenMM and SWIG installation:
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
  - bash Miniconda3-latest-Linux-x86_64.sh -b
  - export PATH=$HOME/miniconda3/bin:$PATH
  - conda config --add channels http://conda.binstar.org/omnia
  - conda create --yes -n py3 python=3.6
  - source activate py3
  - conda install --yes openmm-cuda75 swig
install:
  - mkdir build
  - cd build
  - cmake .. -DENABLE_COVERAGE=On -DENABLE_COVERAGE_ALL=On -DCMAKE_INSTALL_PREFIX=$HOME/miniconda3/envs/py3/ -DOPENMM_DIR=$HOME/miniconda3/envs/py3/ -DSWIG_EXECUTABLE=$HOME/miniconda3/envs/py3/bin/swig
  - make VERBOSE=1
  - make install
  - make PythonInstall

script:
  - make test

after_success:
  - make gcov
  - make lcov
  - bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
